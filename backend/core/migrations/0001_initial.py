# Generated by Django 5.1.6 on 2025-03-20 12:56

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ARD2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jeton_commande', models.CharField(max_length=10, unique=True)),
                ('debut_intervention', models.DateTimeField(blank=True, null=True)),
                ('fin_intervention', models.DateTimeField(blank=True, null=True)),
                ('terminee', models.BooleanField(default=False)),
                ('etat_intervention', models.CharField(choices=[('OK', 'OK'), ('NOK', 'NOK')], max_length=3)),
                ('technicien', models.CharField(max_length=255)),
                ('departement', models.CharField(max_length=255)),
                ('pm', models.CharField(max_length=50)),
                ('date_importation', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ControlPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('heure', models.TimeField()),
                ('tech', models.CharField(max_length=255)),
                ('groupe_tech', models.CharField(choices=[('G1', 'G1'), ('G2', 'G2')], max_length=2)),
                ('actif_depuis', models.DateField()),
                ('zone_manager', models.CharField(blank=True, choices=[('Zone1', 'Zone1'), ('Zone2', 'Zone2'), ('#N/A', '#N/A')], max_length=10, null=True)),
                ('statut', models.CharField(choices=[('Taguée', 'Taguée'), ('Cloturée', 'Cloturée')], max_length=20)),
                ('secteur', models.CharField(max_length=255)),
                ('statut_pto', models.CharField(blank=True, choices=[('//', '//'), ('PTO et CAB absents', 'PTO et CAB absents'), ('première pose nécessaire', 'première pose nécessaire')], max_length=50, null=True)),
                ('synchro', models.CharField(blank=True, choices=[('OK', 'OK'), ('NOK', 'NOK')], max_length=3, null=True)),
                ('agent', models.CharField(max_length=255)),
                ('resultats_verification', models.CharField(blank=True, choices=[('Rectifié et validé', 'Rectifié et validé'), ('Non validé', 'Non validé')], max_length=50, null=True)),
                ('commentaire', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gantt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secteur', models.IntegerField()),
                ('nom_intervenant', models.CharField(max_length=255)),
                ('type_intervention', models.CharField(blank=True, choices=[('OK SAV', 'OK SAV'), ('OK RACC', 'OK RACC'), ('NOK SAV', 'NOK SAV'), ('NOK RACC', 'NOK RACC'), ('En cours SAV', 'En cours SAV'), ('En cours RACC', 'En cours RACC'), ('Alerte SAV', 'Alerte SAV'), ('Alerte RACC', 'Alerte RACC'), ('Planifiée SAV', 'Planifiée SAV'), ('Planifiée RACC', 'Planifiée RACC')], max_length=50, null=True)),
                ('heure_08', models.CharField(blank=True, choices=[('OK SAV', 'OK SAV'), ('OK RACC', 'OK RACC'), ('NOK SAV', 'NOK SAV'), ('NOK RACC', 'NOK RACC'), ('En cours SAV', 'En cours SAV'), ('En cours RACC', 'En cours RACC'), ('Alerte SAV', 'Alerte SAV'), ('Alerte RACC', 'Alerte RACC'), ('Planifiée SAV', 'Planifiée SAV'), ('Planifiée RACC', 'Planifiée RACC')], max_length=50, null=True)),
                ('heure_09', models.CharField(blank=True, choices=[('OK SAV', 'OK SAV'), ('OK RACC', 'OK RACC'), ('NOK SAV', 'NOK SAV'), ('NOK RACC', 'NOK RACC'), ('En cours SAV', 'En cours SAV'), ('En cours RACC', 'En cours RACC'), ('Alerte SAV', 'Alerte SAV'), ('Alerte RACC', 'Alerte RACC'), ('Planifiée SAV', 'Planifiée SAV'), ('Planifiée RACC', 'Planifiée RACC')], max_length=50, null=True)),
                ('heure_10', models.CharField(blank=True, choices=[('OK SAV', 'OK SAV'), ('OK RACC', 'OK RACC'), ('NOK SAV', 'NOK SAV'), ('NOK RACC', 'NOK RACC'), ('En cours SAV', 'En cours SAV'), ('En cours RACC', 'En cours RACC'), ('Alerte SAV', 'Alerte SAV'), ('Alerte RACC', 'Alerte RACC'), ('Planifiée SAV', 'Planifiée SAV'), ('Planifiée RACC', 'Planifiée RACC')], max_length=50, null=True)),
                ('heure_11', models.CharField(blank=True, choices=[('OK SAV', 'OK SAV'), ('OK RACC', 'OK RACC'), ('NOK SAV', 'NOK SAV'), ('NOK RACC', 'NOK RACC'), ('En cours SAV', 'En cours SAV'), ('En cours RACC', 'En cours RACC'), ('Alerte SAV', 'Alerte SAV'), ('Alerte RACC', 'Alerte RACC'), ('Planifiée SAV', 'Planifiée SAV'), ('Planifiée RACC', 'Planifiée RACC')], max_length=50, null=True)),
                ('heure_12', models.CharField(blank=True, choices=[('OK SAV', 'OK SAV'), ('OK RACC', 'OK RACC'), ('NOK SAV', 'NOK SAV'), ('NOK RACC', 'NOK RACC'), ('En cours SAV', 'En cours SAV'), ('En cours RACC', 'En cours RACC'), ('Alerte SAV', 'Alerte SAV'), ('Alerte RACC', 'Alerte RACC'), ('Planifiée SAV', 'Planifiée SAV'), ('Planifiée RACC', 'Planifiée RACC')], max_length=50, null=True)),
                ('heure_13', models.CharField(blank=True, choices=[('OK SAV', 'OK SAV'), ('OK RACC', 'OK RACC'), ('NOK SAV', 'NOK SAV'), ('NOK RACC', 'NOK RACC'), ('En cours SAV', 'En cours SAV'), ('En cours RACC', 'En cours RACC'), ('Alerte SAV', 'Alerte SAV'), ('Alerte RACC', 'Alerte RACC'), ('Planifiée SAV', 'Planifiée SAV'), ('Planifiée RACC', 'Planifiée RACC')], max_length=50, null=True)),
                ('heure_14', models.CharField(blank=True, choices=[('OK SAV', 'OK SAV'), ('OK RACC', 'OK RACC'), ('NOK SAV', 'NOK SAV'), ('NOK RACC', 'NOK RACC'), ('En cours SAV', 'En cours SAV'), ('En cours RACC', 'En cours RACC'), ('Alerte SAV', 'Alerte SAV'), ('Alerte RACC', 'Alerte RACC'), ('Planifiée SAV', 'Planifiée SAV'), ('Planifiée RACC', 'Planifiée RACC')], max_length=50, null=True)),
                ('heure_15', models.CharField(blank=True, choices=[('OK SAV', 'OK SAV'), ('OK RACC', 'OK RACC'), ('NOK SAV', 'NOK SAV'), ('NOK RACC', 'NOK RACC'), ('En cours SAV', 'En cours SAV'), ('En cours RACC', 'En cours RACC'), ('Alerte SAV', 'Alerte SAV'), ('Alerte RACC', 'Alerte RACC'), ('Planifiée SAV', 'Planifiée SAV'), ('Planifiée RACC', 'Planifiée RACC')], max_length=50, null=True)),
                ('heure_16', models.CharField(blank=True, choices=[('OK SAV', 'OK SAV'), ('OK RACC', 'OK RACC'), ('NOK SAV', 'NOK SAV'), ('NOK RACC', 'NOK RACC'), ('En cours SAV', 'En cours SAV'), ('En cours RACC', 'En cours RACC'), ('Alerte SAV', 'Alerte SAV'), ('Alerte RACC', 'Alerte RACC'), ('Planifiée SAV', 'Planifiée SAV'), ('Planifiée RACC', 'Planifiée RACC')], max_length=50, null=True)),
                ('heure_17', models.CharField(blank=True, choices=[('OK SAV', 'OK SAV'), ('OK RACC', 'OK RACC'), ('NOK SAV', 'NOK SAV'), ('NOK RACC', 'NOK RACC'), ('En cours SAV', 'En cours SAV'), ('En cours RACC', 'En cours RACC'), ('Alerte SAV', 'Alerte SAV'), ('Alerte RACC', 'Alerte RACC'), ('Planifiée SAV', 'Planifiée SAV'), ('Planifiée RACC', 'Planifiée RACC')], max_length=50, null=True)),
                ('heure_18', models.CharField(blank=True, choices=[('OK SAV', 'OK SAV'), ('OK RACC', 'OK RACC'), ('NOK SAV', 'NOK SAV'), ('NOK RACC', 'NOK RACC'), ('En cours SAV', 'En cours SAV'), ('En cours RACC', 'En cours RACC'), ('Alerte SAV', 'Alerte SAV'), ('Alerte RACC', 'Alerte RACC'), ('Planifiée SAV', 'Planifiée SAV'), ('Planifiée RACC', 'Planifiée RACC')], max_length=50, null=True)),
                ('taux_transfo', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('taux_remplissage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
            ],
        ),
        migrations.CreateModel(
            name='GanttStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_intervention', models.CharField(choices=[('RACC', 'RACC'), ('SAV', 'SAV')], max_length=10, verbose_name="Type d'intervention")),
                ('taux_transfo', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Taux de transformation')),
                ('nbr_inter_cloturee_ok', models.IntegerField(verbose_name="Nombre d'interventions clôturées OK")),
                ('nbr_inter_cloturee_nok', models.IntegerField(verbose_name="Nombre d'interventions clôturées NOK")),
                ('nbr_inter_en_cours', models.IntegerField(verbose_name="Nombre d'interventions en cours")),
                ('nbr_inter_en_peril', models.IntegerField(verbose_name="Nombre d'interventions en péril")),
                ('nbr_inter_restant', models.IntegerField(verbose_name="Nombre d'interventions restantes")),
                ('pdc_du_jour', models.IntegerField(verbose_name='PDC du jour')),
                ('total', models.IntegerField(verbose_name='Total')),
                ('taux_remplissage', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Taux de remplissage')),
                ('taux_avancement', models.DecimalField(decimal_places=2, max_digits=5, verbose_name="Taux d'avancement")),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
            ],
        ),
        migrations.CreateModel(
            name='GRDV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_rdv', models.DateTimeField(verbose_name='Date et heure du rendez-vous')),
                ('debut', models.DateTimeField(verbose_name="Date et heure du début d'intervention")),
                ('fin', models.DateTimeField(verbose_name="Date et heure de fin d'intervention")),
                ('statut_rendez_vous', models.CharField(max_length=255, verbose_name='Statut du rendez-vous')),
                ('statut_grdv', models.CharField(max_length=255, verbose_name='Statut GRDV')),
                ('activite', models.CharField(max_length=255, verbose_name='Activité')),
                ('plp', models.CharField(max_length=255, verbose_name='PLP')),
                ('technicien', models.CharField(max_length=255, verbose_name='Technicien')),
                ('presta', models.CharField(max_length=255, verbose_name='Presta')),
                ('tel_contact', models.CharField(max_length=20, verbose_name='Téléphone de contact')),
                ('commentaire', models.TextField(verbose_name='Commentaire')),
                ('adresse_postale', models.CharField(max_length=255, verbose_name='Adresse postale')),
                ('ref_commande', models.CharField(max_length=255, verbose_name='Référence de commande')),
                ('nro', models.CharField(max_length=255, verbose_name='NRO')),
                ('pm', models.CharField(max_length=255, verbose_name='PM')),
                ('code', models.CharField(max_length=255, verbose_name='Code')),
                ('residence', models.CharField(max_length=255, verbose_name='Résidence')),
                ('bat', models.CharField(max_length=255, verbose_name='Bâtiment')),
                ('esc', models.CharField(max_length=255, verbose_name='Escalier')),
                ('eta', models.CharField(max_length=255, verbose_name='Étage')),
                ('por', models.CharField(max_length=255, verbose_name='Porte')),
                ('pto', models.CharField(max_length=255, verbose_name='PTO')),
                ('id_client', models.CharField(max_length=255, verbose_name='ID Client')),
                ('technologement', models.CharField(max_length=255, verbose_name='Technologement')),
                ('operateurlogement', models.CharField(max_length=255, verbose_name='Opérateur logement')),
                ('typezone', models.CharField(max_length=255, verbose_name='Type de zone')),
                ('typetechno', models.CharField(max_length=255, verbose_name='Type de technologie')),
                ('secteur_infra', models.CharField(max_length=255, verbose_name='Secteur infrastructure')),
                ('typebatiment', models.CharField(max_length=255, verbose_name='Type de bâtiment')),
                ('typepoteau_edf', models.CharField(max_length=255, verbose_name='Type de poteau EDF')),
                ('typeclient', models.CharField(max_length=255, verbose_name='Type de client')),
                ('typebox', models.CharField(max_length=255, verbose_name='Type de box')),
                ('id_debrief_rdv', models.CharField(max_length=255, verbose_name='ID Débrief RDV')),
                ('debrief_rdv', models.TextField(verbose_name='Débrief RDV')),
                ('Adresse_PM', models.CharField(max_length=255, verbose_name='Adresse PM')),
                ('Connecteur_Free_PM', models.CharField(max_length=255, verbose_name='Connecteur Free PM')),
                ('date_import', models.DateTimeField(auto_now_add=True, verbose_name="Date et heure d'import du fichier")),
            ],
            options={
                'verbose_name': 'GRDV',
                'verbose_name_plural': 'GRDVs',
            },
        ),
        migrations.CreateModel(
            name='InterventionsRACC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_jeton', models.CharField(max_length=100, unique=True)),
                ('date_intervention', models.DateField()),
                ('heure_debut', models.TimeField()),
                ('techniciens_initial', models.CharField(max_length=100)),
                ('techniciens_intervenant', models.CharField(blank=True, max_length=100, null=True)),
                ('nbr_nok', models.IntegerField(default=0)),
                ('nbr_ok', models.IntegerField(default=0)),
                ('total_interventions', models.IntegerField(default=0)),
                ('ref_pm', models.CharField(max_length=100)),
                ('dernier_echec', models.CharField(blank=True, choices=[('Client absent', 'Client absent'), ('Freebox non reçue', 'Freebox non reçue'), ('Client réalise les travaux', 'Client réalise les travaux'), ('Autorisation propriétaire', 'Autorisation propriétaire'), ('Accès refusé (Syndic/Copro)', 'Accès refusé (Syndic/Copro)'), ('Pas d accès PBO', 'Pas d accès PBO'), ('Manque de consommable', 'Manque de consommable'), ('Pas d Accès PM', 'Pas d Accès PM'), ('Autorisation du propriétaire', 'Autorisation du propriétaire'), ('RDV non honoré', 'RDV non honoré'), ('Fourreau à déboucher (intérieur)', 'Fourreau à déboucher (intérieur)'), ('Kit laissé mais non scanné', 'Kit laissé mais non scanné'), ('Refus d accès abonné', 'Refus d accès abonné')], max_length=100, null=True)),
                ('secteur', models.CharField(max_length=10)),
                ('contre_appel_client', models.TextField(blank=True, null=True)),
                ('secu', models.TextField(blank=True, null=True)),
                ('heure_demarrage', models.DateTimeField(blank=True, null=True)),
                ('heure_cloture', models.DateTimeField(blank=True, null=True)),
                ('synchro', models.CharField(blank=True, choices=[('OK', 'OK'), ('NOK', 'NOK'), ('Null', 'Null')], max_length=10, null=True)),
                ('resultat_jj', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Intervention RACC',
                'verbose_name_plural': 'Interventions RACC',
            },
        ),
        migrations.CreateModel(
            name='InterventionsSAV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_jeton', models.CharField(max_length=100, unique=True, verbose_name='Numéro de jeton')),
                ('date_intervention', models.DateField(verbose_name="Date d'intervention")),
                ('heure_debut', models.TimeField(verbose_name='Heure de début')),
                ('techniciens_initial', models.CharField(max_length=100, verbose_name='Technicien initial')),
                ('techniciens_intervenant', models.CharField(blank=True, max_length=100, null=True, verbose_name='Technicien intervenant')),
                ('nbr_nok', models.IntegerField(default=0, verbose_name='Nombre de NOK')),
                ('nbr_ok', models.IntegerField(default=0, verbose_name='Nombre de OK')),
                ('total_interventions', models.IntegerField(default=0, verbose_name='Total des interventions')),
                ('ref_pm', models.CharField(max_length=100, verbose_name='Référence PM')),
                ('status_intervention', models.CharField(choices=[('2906', '2906 - Freebox Etape 2/3'), ('3705', "3705 - Pas d'accès au local PM"), ('OK', 'OK'), ('3510', '3510 - Tube / Fibre HS'), ('3204', '3204 - Véhicule sur chambre'), ('303', '303 - Abonné absent'), ('3902', '3902 - PM vandalisé'), ('3202', "3202 - Pas d'intervention nécessaire")], max_length=50, verbose_name="Statut de l'intervention")),
                ('secteur', models.CharField(max_length=10, verbose_name='Secteur')),
                ('secu', models.TextField(blank=True, null=True, verbose_name='Sécurité')),
                ('heure_demarrage', models.TimeField(blank=True, null=True, verbose_name='Heure de démarrage')),
                ('heure_cloture', models.TimeField(blank=True, null=True, verbose_name='Heure de clôture')),
                ('synchro', models.CharField(blank=True, choices=[('OK', 'OK'), ('NOK', 'NOK'), ('Null', 'Null')], max_length=10, null=True, verbose_name='Synchro')),
                ('resultat_jj', models.TextField(blank=True, null=True, verbose_name='Résultat JJ')),
            ],
            options={
                'verbose_name': 'Intervention SAV',
                'verbose_name_plural': 'Interventions SAV',
            },
        ),
        migrations.CreateModel(
            name='NOK',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jeton', models.CharField(max_length=20)),
                ('date_rdv', models.DateField()),
                ('type_intervention', models.CharField(choices=[('Pose de PTO ZMD', 'Pose de PTO ZMD'), ('Pose de PTO ZTD', 'Pose de PTO ZTD'), ('SAV', 'SAV'), ('PON', 'PON'), ('Remise en conformité', 'Remise en conformité'), ('null', 'Null')], max_length=50)),
                ('question', models.CharField(choices=[('Appel CA ?', 'Appel CA ?'), ('Null', 'Null')], max_length=50)),
                ('reponse', models.CharField(choices=[('Non', 'Non'), ('Pas d’appel CA effectué', 'Pas d’appel CA effectué'), ('CA injoignable', 'CA injoignable'), ('Null', 'Null')], max_length=50)),
                ('reponse_libre', models.CharField(blank=True, max_length=255, null=True)),
                ('tech_nom_prenom', models.CharField(max_length=100)),
                ('commentaire', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parametres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_tech', models.CharField(max_length=50, unique=True, verbose_name='ID Technicien')),
                ('nom_tech', models.CharField(max_length=255, verbose_name='Nom du Technicien')),
                ('departement', models.CharField(max_length=255, verbose_name='Département')),
                ('log_free', models.CharField(max_length=255, verbose_name='Log Free')),
                ('competence', models.CharField(blank=True, choices=[('SAV', 'SAV'), ('', 'Vide')], max_length=3, verbose_name='Compétence')),
                ('actif_depuis', models.DateField(verbose_name='Actif depuis')),
                ('controle_photo', models.CharField(choices=[('G1', 'G1'), ('G2', 'G2')], max_length=2, verbose_name='Contrôle Photo')),
                ('manager', models.CharField(max_length=255, verbose_name='Manager')),
                ('zone', models.CharField(choices=[('Zone 1', 'Zone 1'), ('Zone 2', 'Zone 2')], max_length=50, verbose_name='Zone')),
                ('grille_actif', models.CharField(choices=[('OUI', 'OUI'), ('NON', 'NON')], max_length=3, verbose_name='Grille Actif')),
                ('log_technicien', models.CharField(max_length=255, verbose_name='Log Technicien')),
                ('mdp', models.CharField(max_length=255, verbose_name='Mot de passe')),
            ],
            options={
                'verbose_name': 'Paramètre',
                'verbose_name_plural': 'Paramètres',
            },
        ),
        migrations.CreateModel(
            name='Controlafroid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resultat_a_froid', models.CharField(choices=[('Validé', 'Validé'), ('Non validé', 'Non validé'), ('null', 'null')], default='null', max_length=20, verbose_name='Résultat à froid')),
                ('commentaire', models.CharField(choices=[('PTO prise zoomer + decharge pto dans le placard / rectifié et validé', 'PTO prise zoomer + decharge pto dans le placard / rectifié et validé'), ('photo Mur avant travaux entamer / photo Mur après ne montre pas le PTO / REF PTO éronnée', 'photo Mur avant travaux entamer / photo Mur après ne montre pas le PTO / REF PTO éronnée'), ('null', 'null')], default='null', max_length=150, verbose_name='Commentaire')),
                ('control_photo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='controlafroid', to='core.controlphoto')),
            ],
            options={
                'verbose_name': 'Control à froid',
                'verbose_name_plural': 'Controls à froid',
            },
        ),
        migrations.CreateModel(
            name='RelanceJJ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_rdv', models.DateField(blank=True, null=True, verbose_name='Date RDV (provenant de GRDV.date_rdv)')),
                ('activite', models.CharField(blank=True, choices=[('SAV', 'SAV'), ('RACC', 'RACC')], max_length=4, verbose_name='Activité (calculée à partir de GRDV.activite)')),
                ('heure_prevue', models.TimeField(blank=True, null=True, verbose_name='Heure prévue (provenant de GRDV.debut)')),
                ('techniciens', models.CharField(blank=True, max_length=255, verbose_name='Techniciens (provenant de ARD2.technicien)')),
                ('numero', models.CharField(max_length=50, verbose_name='Numéro (récupéré via les paramètres)')),
                ('departement', models.CharField(blank=True, max_length=255, verbose_name='Département (provenant de ARD2.departement)')),
                ('pec', models.CharField(max_length=255, verbose_name='PEC (saisi manuellement)')),
                ('statut', models.CharField(blank=True, choices=[('Cloturée', 'Cloturée'), ('Taguée', 'Taguée')], max_length=20, null=True, verbose_name='Statut (calculé automatiquement)')),
                ('commentaire_demarrage', models.TextField(blank=True, null=True, verbose_name='Commentaire démarrage')),
                ('commentaire_cloture', models.TextField(blank=True, null=True, verbose_name='Commentaire clôture')),
                ('heure_debut', models.TimeField(blank=True, null=True, verbose_name='Heure début (ARD2.debut_intervention)')),
                ('heure_fin', models.TimeField(blank=True, null=True, verbose_name='Heure fin (ARD2.fin_intervention)')),
                ('grdv', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relances', to='core.grdv', verbose_name='GRDV associé')),
                ('jeton', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relances', to='core.ard2', verbose_name='Jeton (ARD2)')),
            ],
        ),
        migrations.CreateModel(
            name='DebriefSAV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name="Date d'intervention")),
                ('heure', models.TimeField(verbose_name="Heure d'intervention")),
                ('tech', models.CharField(max_length=255, verbose_name='Nom du technicien')),
                ('numero_tech', models.CharField(max_length=50, verbose_name='Numéro du technicien')),
                ('nouveaux_tech', models.DateField(blank=True, null=True, verbose_name='Nouveaux tech')),
                ('zone_manager', models.CharField(blank=True, max_length=255, null=True, verbose_name='Zone/Manager')),
                ('code_cloture_tech', models.TextField(blank=True, null=True, verbose_name='Code clôture technicien')),
                ('reference_pm', models.CharField(blank=True, max_length=50, null=True, verbose_name='Référence PM')),
                ('appel_tech', models.CharField(blank=True, choices=[("Pas d'appel", "Pas d'appel"), ('Appel à chaud', 'Appel à chaud'), (None, 'null')], max_length=20, null=True, verbose_name='Appel tech')),
                ('synchro', models.CharField(blank=True, choices=[('Echec', 'Echec'), ('Taguée', 'Taguée'), (None, 'null')], max_length=10, null=True, verbose_name='Synchro')),
                ('secteur', models.CharField(blank=True, max_length=255, null=True, verbose_name='Secteur')),
                ('type_echec', models.CharField(blank=True, choices=[('Echec client', 'Echec client'), ("Echec d'acces", "Echec d'acces"), (None, 'null')], max_length=20, null=True, verbose_name="Type d'échec")),
                ('pec_par', models.CharField(blank=True, max_length=255, null=True, verbose_name='PEC par')),
                ('resultat_controle', models.CharField(blank=True, choices=[('RAS', 'RAS'), (None, 'null')], max_length=10, null=True, verbose_name='Résultat du contrôle')),
                ('diagnostic', models.TextField(blank=True, null=True, verbose_name='Diagnostic')),
                ('jeton', models.ForeignKey(limit_choices_to={'activite': 'SAV'}, on_delete=django.db.models.deletion.CASCADE, related_name='debriefs_sav', to='core.relancejj')),
            ],
        ),
        migrations.CreateModel(
            name='DebriefRACC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nouveaux_tech', models.CharField(blank=True, help_text='Champ saisi manuellement (nouveaux tech)', max_length=255, null=True)),
                ('code_cloture_technicien', models.TextField(blank=True, help_text='Code de clôture du technicien (optionnel)', null=True)),
                ('appel_tech', models.CharField(blank=True, choices=[("Pas d'appel", "Pas d'appel"), ('Appel à chaud', 'Appel à chaud'), ('null', 'null')], default='null', help_text='Appel tech (optionnel)', max_length=20, null=True)),
                ('synchro', models.CharField(blank=True, choices=[('Echec', 'Echec'), ('Taguées', 'Taguées'), ('null', 'null')], default='null', help_text='Synchro (optionnel)', max_length=20, null=True)),
                ('type_echec', models.CharField(blank=True, choices=[('Echec client', 'Echec client'), ("Echec d'acces", "Echec d'acces"), ('null', 'null')], default='null', help_text="Type d'échec (optionnel)", max_length=20, null=True)),
                ('pec_par', models.CharField(blank=True, help_text='PEC PAR (optionnel)', max_length=255, null=True)),
                ('resultat_controle', models.CharField(blank=True, choices=[('RAS', 'RAS'), ('null', 'null')], default='null', help_text='Résultat du contrôle (optionnel)', max_length=10, null=True)),
                ('diagnostic', models.TextField(blank=True, help_text='Diagnostic (optionnel)', null=True)),
                ('parametre', models.ForeignKey(blank=True, help_text='Paramètres du technicien (pour numéro et zone, optionnel)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.parametres')),
                ('relance', models.ForeignKey(blank=True, help_text="RelanceJJ associée (doit avoir activite='RACC' et éventuellement être terminée)", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='debriefs', to='core.relancejj')),
            ],
        ),
        migrations.AddField(
            model_name='controlphoto',
            name='jeton',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control_photos', to='core.relancejj'),
        ),
    ]
